name: SDP k8s client

on:
  push:
    branches:
      - main

jobs:
  sdp-injector:
    runs-on: ubuntu-latest
    steps:
      - name: Get build profile
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
              echo '::set-output name=PROFILE::release'
          else
              echo '::set-output name=PROFILE::debug'
          fi
        id: build-profile
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push image
        uses: docker/build-push-action@v2
        with:
          build-args: |
            PROFILE=${{ steps.build-profile.outputs.PROFILE }}
          context: .
          file: docker/sdp-injector-Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            ghcr.io/${{ github.repository }}/sdp-injector:latest
            ghcr.io/${{ github.repository }}/sdp-injector:${{ github.sha }}

  sdp-dnsmasq:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/sdp-dnsmasq-Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            ghcr.io/${{ github.repository }}/sdp-dnsmasq:latest
            ghcr.io/${{ github.repository }}/sdp-dnsmasq:${{ github.sha }}

  sdp-headless-driver:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/sdp-headless-driver-Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            ghcr.io/${{ github.repository }}/sdp-headless-driver:latest
            ghcr.io/${{ github.repository }}/sdp-headless-driver:${{ github.sha }}

  sdp-headless-service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/sdp-headless-service-Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            ghcr.io/${{ github.repository }}/sdp-headless-service:latest
            ghcr.io/${{ github.repository }}/sdp-headless-service:${{ github.sha }}

  helm:
    runs-on: ubuntu-latest
    env:
      HELM_EXPERIMENTAL_OCI: 1
    steps:
      - uses: actions/checkout@v2
      - run: |
          echo "chart_version=$(grep version: k8s/chart/Chart.yaml | awk '/version:/{print $NF}')" >> $GITHUB_ENV
      - uses: azure/setup-helm@v1
        with:
          version: 3.7.2
      - name: Login to GitHub Container Registry
        run: helm registry login ghcr.io/${{ github.repository }} --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }}
      - name: Lint chart
        run: helm lint k8s/chart
      - name: Package chart
        run: helm package k8s/chart --app-version ${{ github.sha }}
      - name: Push chart
        run: helm push sdp-k8s-client-${{ env.chart_version }}.tgz oci://ghcr.io/appgate/charts/sdp-k8s-client
