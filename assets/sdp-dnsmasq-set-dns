#!/usr/bin/env sh

# This script is executed by socat.
# It will get events from sdp-driver about DNS changes and it will
# configure dnsmasq to use the new settings requested by sdp-driver

# NOTE: stdin reads from the socat socket.

DNSMASQ_PID=/var/run/dnsmasq.pid
DNSMASQ_APPGATE=/etc/dnsmasq.d/appgate.conf

match_domains () {
    servers="$1"
    domains="$2"
echo -n "$domains" | awk -vSERVERS="$servers" -e '
BEGIN {
  RS = ","
  len = 0
  split(SERVERS, servers, ",")
}
{
  if (match($0, "dns.server")) {
    # sdp-driver sent an entry with the form: dns.server.X.Y.Z.W.domain
    #    where X.Y.Z.W is the DNS to use to resolve hosts in domain
    domains[len++] = gensub(/dns.server\.([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+).(.+)/, "server=/\\2/\\1", "g")
  } else if (length() > 0) {
    # sdp-driver sent a plain domain so all the known servers should search hosts there
    for (s in servers) {
      domains[len++] = "server=/" $1 "/" servers[s]
    }
  }
}
END {
  for (s in servers) {
    print("server=" servers[s])
  }
  for (d in domains) {
    print(domains[d])
  }
}'
}

read cli
echo "Got new DNS configuration from sdp-driver: $cli"
opt=${cli%% *}
while [ ! -z $opt ]; do
    case ${opt%%=*} in
       --servers)
            servers="${opt##*=}"
            ;;
        --domains)
            domains="${opt##*=}"
            ;;
        *)
            # ignore this
            ;;
    esac
    cli=${cli#* }
    opt=${cli%% *}
    if [ "$opt" = "$cli" ]; then
        cli=""
    fi
done

if [ -z "$servers" ]; then
    echo "--servers not provided, aborting"
    exit 1
fi

echo "Setting new DNS configuration"
# This reuses the first entry in the file since that entry
# points to the kube_dns service
kube_dns=$(cat $DNSMASQ_APPGATE|head -1)
echo $kube_dns > $DNSMASQ_APPGATE
for i in $(match_domains "$servers" "$domains"); do
   echo $i >> $DNSMASQ_APPGATE
done

echo "Applying new DNS configuration"
# dnsmasq can not reload files on SIHGUP so we need to restart it
kill -9 $(cat /sdp-dnsmasq/dnsmasq.pid)
/usr/sbin/dnsmasq --no-daemon --log-queries --clear-on-reload &
echo $! > /sdp-dnsmasq/dnsmasq.pid
